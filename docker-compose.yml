services:
  etcd:
    image: bitnami/etcd:3.5.21
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    volumes:
      - etcd_data:/bitnami/etcd
      - ./import-routes.sh:/import-routes.sh
    ports:
      - 2379:2379
      - 2380:2380
    networks:
      - apisix-network

  apisix:
    image: apache/apisix:3.12.0-debian
    volumes:
      - ./conf/config.yaml:/usr/local/apisix/conf/config.yaml
      - ./plugins:/usr/local/apisix/custom/apisix/plugins/
      #- ./logs:/usr/local/apisix/logs
    ports:
      - "9080:9080"
      - "9180:9180"
      - "9443:9443"
      - "9090:9090" # apix control
    environment:
      - APISIX_STAND_ALONE=false
      - APISIX_ROUTER_HTTP_STRICT_MATCH=false
      - ETCD_HOST=http://etcd:2379
    networks:
      - apisix-network
    depends_on:
      - etcd
    restart: on-failure

  apisix-dashboard:
    image: apache/apisix-dashboard:3.0.0-alpine
    volumes:
      - ./conf/dashboard_conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
      - ./conf/schema.json:/usr/local/apisix-dashboard/conf/schema.json
    ports:
      - "9000:9000"
    networks:
      - apisix-network
    depends_on:
      - apisix
      - etcd

  mysql:
    image: 'mysql/mysql-server:8.0'
    ports:
      - 3306:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: "mydatabase"
      MYSQL_USER: 'myroot'
      MYSQL_PASSWORD: 'mypass'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - apisix-network

  app:
    build:
      args:
        - INSTALL_XDEBUG=true
        - INSTALL_E2E=false
      context: ./docker/php/
      dockerfile: Dockerfile
    ports:
      - '${APP_PORT:-3000}:80'
    env_file:
      - ./docker/httpd/env
    environment:
      PHP_IDE_CONFIG: serverName=user-api
    volumes:
      - ./projects/user-api:/var/www/vhosts/user-api
      - ./docker/httpd/conf.d/:/etc/httpd/conf.d/
    networks:
      apisix-network:
        aliases:
          - user-api.lan
    depends_on:
      - mysql

  mock-api:
    image: node:18-alpine
    volumes:
      - ./mock-api:/app
    working_dir: /app
    command: sh -c "npm install && npm start"
    ports:
      - "8080:8080"
    networks:
      - apisix-network

networks:
  apisix-network:
    driver: bridge

volumes:
  etcd_data:
    driver: local
  mysql_data:
    driver: local