apisix:
  node_listen: 9080              # APISIX listening port
  enable_ipv6: false
  extra_lua_path: "/usr/local/apisix/custom/?.lua"

  # for export schema.json
  enable_control: true
  control:
    ip: "0.0.0.0"
    port: 9090

deployment:
  role: traditional
  role_traditional:
    config_provider: etcd

  etcd:
    host:
      - "http://etcd:2379"
    prefix: "/apisix"
    timeout: 30

  admin:
    allow_admin:
      - 127.0.0.0/24
      - 0.0.0.0/0
    admin_listen:
      ip: 0.0.0.0
      port: 9180
    admin_key:
      - name: admin
        key: ${{ADMIN_KEY:=edd1c9f034335f136f87ad84b625c8f1}}  # using fixed API token has security risk, please update it when you deploy to production environment. If passed empty then will be autogenerated by APISIX and will be written back here. Recommended is to use external mechanism to generate and store the token.
        role: admin
      - name: "viewer"
        key: 4054f7cf07e344346cd3f287985e76a2
        role: viewer

## custom plugin + default plugin
plugins:
  - jwt-remote-auth
  - real-ip
  - ai
  - client-control
  - proxy-control
  - request-id
  - zipkin
  - ext-plugin-pre-req
  - fault-injection
  - mocking
  - serverless-pre-function
  - cors
  - ip-restriction
  - ua-restriction
  - referer-restriction
  - csrf
  - uri-blocker
  - request-validation
  - chaitin-waf
  - multi-auth
  - openid-connect
  - authz-casbin
  - authz-casdoor
  - wolf-rbac
  - ldap-auth
  - hmac-auth
  - basic-auth
  - jwt-auth
  - jwe-decrypt
  - key-auth
  - consumer-restriction
  - attach-consumer-label
  - forward-auth
  - opa
  - authz-keycloak
  - proxy-cache
  - body-transformer
  - ai-prompt-template
  - ai-prompt-decorator
  - ai-prompt-guard
  - ai-rag
  - ai-rate-limiting
  - ai-proxy-multi
  - ai-proxy
  - ai-aws-content-moderation
  - proxy-mirror
  - proxy-rewrite
  - workflow
  - api-breaker
  - limit-conn
  - redirect
  - limit-req
  - gzip
  - server-info
  - traffic-split
  - response-rewrite
  - degraphql
  - kafka-proxy
  - grpc-transcode
  - grpc-web
  - http-dubbo
  - public-api
  - prometheus
  - datadog
  - loki-logger
  - elasticsearch-logger
  - echo
  - loggly
  - http-logger
  - splunk-hec-logging
  - skywalking-logger
  - google-cloud-logging
  - sls-logger
  - tcp-logger
  - kafka-logger
  - rocketmq-logger
  - syslog
  - udp-logger
  - file-logger
  - clickhouse-logger
  - tencent-cloud-cls
  - inspect
  - example-plugin
  - aws-lambda
  - azure-functions
  - openwhisk
  - openfunction
  - serverless-post-function
  - ext-plugin-post-req
  - ext-plugin-post-resp
  - cas-auth
  - limit-count
